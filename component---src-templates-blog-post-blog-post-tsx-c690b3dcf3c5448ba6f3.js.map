{"version":3,"sources":["webpack:///./src/templates/blog-post/blog-post.tsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header/header.tsx","webpack:///./src/components/layout/layout.tsx","webpack:///./src/components/layout/index.ts"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","BlogPost","_ref","post","data","markdownRemark","a","createElement","frontmatter","title","dangerouslySetInnerHTML","__html","html","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Header","siteTitle","react_default","style","marginBottom","margin","maxWidth","padding","gatsby_browser_entry","to","Layout","Fragment","header","site","siteMetadata","paddingTop","Date","getFullYear","href","_755544856","layout"],"mappings":"0FACAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,0BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,KAceS,UAXkC,SAAAC,GAAA,IACvBC,EADuBD,EAC/CE,KAAQC,eADuC,OAG/CP,EAAAQ,EAAAC,cAACP,EAAA,EAAD,KACEF,EAAAQ,EAAAC,cAAA,WACET,EAAAQ,EAAAC,cAAA,UAAKJ,EAAKK,YAAYC,OACtBX,EAAAQ,EAAAC,cAAA,OAAKG,wBAAyB,CAAEC,OAAQR,EAAKS,WAkB5C,IAAMhB,EAAK,8CC5BlBJ,EAAAG,EAAAD,EAAA,sBAAAmB,IAAA,IAAAhB,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAiB,EAAAtB,EAAA,GAAAuB,EAAAvB,EAAAO,EAAAe,GAAAE,EAAAxB,EAAA,IAAAyB,EAAAzB,EAAAO,EAAAiB,GAAAxB,EAAAG,EAAAD,EAAA,sBAAAuB,EAAAX,IAAAd,EAAA,SAYM0B,EAAqBC,IAAMC,cAAc,IAEzCP,EAAc,SAAAQ,GAAK,OACvBvB,EAAAQ,EAAAC,cAACW,EAAmBI,SAApB,KACG,SAAAC,GACC,OACEF,EAAMjB,MACLmB,EAAgBF,EAAMzB,QAAU2B,EAAgBF,EAAMzB,OAAOQ,MAEtDiB,EAAMG,QAAUH,EAAMI,UAC5BJ,EAAMjB,KAAOiB,EAAMjB,KAAKA,KAAOmB,EAAgBF,EAAMzB,OAAOQ,MAGvDN,EAAAQ,EAAAC,cAAA,uCA4BfM,EAAYa,UAAY,CACtBtB,KAAMuB,IAAUC,OAChBhC,MAAO+B,IAAUE,OAAOC,WACxBN,OAAQG,IAAUI,KAClBN,SAAUE,IAAUI,2BCzDtB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,8KCMzCK,EAAmB,SAAAnC,GAAkB,IAAfoC,EAAepC,EAAfoC,SACpBC,EAAgBC,UAAOC,4BAA4BH,EAASI,UAClE,OAAOvB,IAAMZ,cAAcoC,IAApBC,OAAAC,OAAA,CACLP,WACAC,iBACGA,EAAcO,QAIrBT,EAAiBX,UAAY,CAC3BY,SAAUX,IAAUoB,MAAM,CACxBL,SAAUf,IAAUE,OAAOC,aAC1BA,YAGUO,oFCMAW,EApBA,SAAA9C,GAAA,IAAG+C,EAAH/C,EAAG+C,UAAH,OACbC,EAAA5C,EAAAC,cAAA,UACE4C,MAAO,CACLC,aAAc,YAGhBF,EAAA5C,EAAAC,cAAA,OACE4C,MAAO,CACLE,OAAQ,SACRC,SAAU,IACVC,QAAS,sBAGXL,EAAA5C,EAAAC,cAAA,MAAI4C,MAAO,CAAEE,OAAQ,IACnBH,EAAA5C,EAAAC,cAACiD,EAAA,EAAD,CAAMC,GAAG,KAAKR,OC4BPS,EAlCA,SAAAxD,GAAA,IAAGuB,EAAHvB,EAAGuB,SAAH,OACbyB,EAAA5C,EAAAC,cAACiD,EAAA,EAAD,CACE5D,MAAK,YASL4B,OAAQ,SAAApB,GAAI,OACV8C,EAAA5C,EAAAC,cAAA2C,EAAA5C,EAAAqD,SAAA,KACET,EAAA5C,EAAAC,cAACqD,EAAD,CAAQX,UAAW7C,EAAKyD,KAAKC,aAAarD,QAC1CyC,EAAA5C,EAAAC,cAAA,OACE4C,MAAO,CACLE,OAAM,SACNC,SAAU,IACVC,QAAO,wBACPQ,WAAY,IAGdb,EAAA5C,EAAAC,cAAA,YAAOkB,GACPyB,EAAA5C,EAAAC,cAAA,oBACK,IAAIyD,MAAOC,cADhB,mBAGEf,EAAA5C,EAAAC,cAAA,KAAG2D,KAAK,4BAAR,cAzBV9D,KAAA+D,KChBF3E,EAAAG,EAAAD,EAAA,sBAAA0E","file":"component---src-templates-blog-post-blog-post-tsx-c690b3dcf3c5448ba6f3.js","sourcesContent":["import { graphql } from 'gatsby'\nimport React from 'react'\nimport Layout from '../../components/layout'\n\nconst BlogPost: React.FunctionComponent<Props> = ({\n  data: { markdownRemark: post },\n}) => (\n  <Layout>\n    <div>\n      <h1>{post.frontmatter.title}</h1>\n      <div dangerouslySetInnerHTML={{ __html: post.html }} />\n    </div>\n  </Layout>\n)\n\nexport default BlogPost\n\ninterface Props {\n  data: {\n    markdownRemark: {\n      html: string\n      frontmatter: {\n        title: string\n      }\n    }\n  }\n}\n\nexport const query = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { Link } from 'gatsby'\nimport React from 'react'\n\ninterface Props {\n  siteTitle: string\n}\n\nconst Header = ({ siteTitle }: Props) => (\n  <header\n    style={{\n      marginBottom: '1.45rem',\n    }}\n  >\n    <div\n      style={{\n        margin: '0 auto',\n        maxWidth: 960,\n        padding: '1.45rem 1.0875rem',\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link to=\"/\">{siteTitle}</Link>\n      </h1>\n    </div>\n  </header>\n)\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport { graphql, StaticQuery } from 'gatsby'\nimport React from 'react'\nimport Header from '../header'\n\ninterface Props {\n  children: React.ReactNode\n}\n\nconst Layout = ({ children }: Props) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: `0 auto`,\n            maxWidth: 960,\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0,\n          }}\n        >\n          <main>{children}</main>\n          <footer>\n            Â© {new Date().getFullYear()}, Built with\n            {` `}\n            <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n          </footer>\n        </div>\n      </>\n    )}\n  />\n)\n\nexport default Layout\n","export { default } from './layout'\n"],"sourceRoot":""}